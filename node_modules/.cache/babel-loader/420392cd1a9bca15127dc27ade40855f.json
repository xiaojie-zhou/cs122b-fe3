{"ast":null,"code":"import Config from \"backend/config.json\";\nimport Axios from \"axios\"; // \"cartInsert\": \"/cart/insert\",\n//     \"cartUpdate\": \"/cart/update\",\n//     \"cartDelete\": \"/cart/delete/{movieId}\",\n//     \"cartRetrieve\": \"/cart/retrieve\",\n//     \"cartClear\": \"/cart/clear\",\n//     \"orderPayment\": \"/order/payment\",\n//     \"orderComplete\": \"/order/complete\",\n//     \"orderList\": \"/order/list\",\n//     \"orderDetail\": \"/order/detail/{saleId}\"\n\nexport async function cartInsert(cartRequest, accessToken) {\n  const cartParams = {\n    movieId: cartRequest.movieId,\n    quantity: cartRequest.quantity\n  };\n  const options = {\n    method: \"POST\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.cartInsert,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    },\n    data: cartRequest // Data to send in Body (The RequestBody to send)\n\n  };\n  return Axios.request(options);\n}\nexport async function cartUpdate(cartRequest, accessToken) {\n  const cartParams = {\n    movieId: cartRequest.movieId,\n    quantity: cartRequest.quantity\n  };\n  const options = {\n    method: \"POST\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.cartUpdate,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    },\n    data: cartParams // Data to send in Body (The RequestBody to send)\n\n  };\n  return Axios.request(options);\n}\nexport async function cartDelete(cartRequest, accessToken) {\n  const options = {\n    method: \"DELETE\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.cartDelete + cartRequest.movieId,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    }\n  };\n  return Axios.request(options);\n}\nexport async function cartRetrieve(accessToken) {\n  const options = {\n    method: \"GET\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.cartRetrieve,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    }\n  };\n  return Axios.request(options);\n}\nexport async function cartClear(accessToken) {\n  const options = {\n    method: \"POST\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.cartClear,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    }\n  };\n  return Axios.request(options);\n}\nexport async function orderPayment(accessToken) {\n  const options = {\n    method: \"GET\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.orderPayment,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    }\n  };\n  return Axios.request(options);\n}\nexport async function orderComplete(paymentintent, accessToken) {\n  const options = {\n    method: \"POST\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.orderComplete,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    },\n    data: {\n      paymentIntentId: paymentintent\n    }\n  };\n  return Axios.request(options);\n}\nexport async function orderList(accessToken) {\n  const options = {\n    method: \"GET\",\n    // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n    baseURL: Config.billingUrl,\n    // Base URL (localhost:8081 for example)\n    url: Config.billing.orderList,\n    // Path of URL (\"/login\")\n    headers: {\n      Authorization: \"Bearer \" + accessToken\n    }\n  };\n  return Axios.request(options);\n}","map":{"version":3,"sources":["/Users/XiaojieZhou/CS122B/cs122b-fe3/src/backend/billing.js"],"names":["Config","Axios","cartInsert","cartRequest","accessToken","cartParams","movieId","quantity","options","method","baseURL","billingUrl","url","billing","headers","Authorization","data","request","cartUpdate","cartDelete","cartRetrieve","cartClear","orderPayment","orderComplete","paymentintent","paymentIntentId","orderList"],"mappings":"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","sourcesContent":["import Config from \"backend/config.json\";\nimport Axios from \"axios\";\n\n// \"cartInsert\": \"/cart/insert\",\n//     \"cartUpdate\": \"/cart/update\",\n//     \"cartDelete\": \"/cart/delete/{movieId}\",\n//     \"cartRetrieve\": \"/cart/retrieve\",\n//     \"cartClear\": \"/cart/clear\",\n//     \"orderPayment\": \"/order/payment\",\n//     \"orderComplete\": \"/order/complete\",\n//     \"orderList\": \"/order/list\",\n//     \"orderDetail\": \"/order/detail/{saleId}\"\n\nexport async function cartInsert(cartRequest, accessToken) {\n    const cartParams = {\n        movieId: cartRequest.movieId,\n        quantity:cartRequest.quantity,\n    };\n\n    const options = {\n        method: \"POST\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.cartInsert, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n        data: cartRequest // Data to send in Body (The RequestBody to send)\n    }\n\n    return Axios.request(options);\n}\nexport async function cartUpdate(cartRequest, accessToken) {\n    const cartParams = {\n        movieId: cartRequest.movieId,\n        quantity:cartRequest.quantity,\n    };\n\n    const options = {\n        method: \"POST\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.cartUpdate, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n        data: cartParams // Data to send in Body (The RequestBody to send)\n    }\n\n    return Axios.request(options);\n}\nexport async function cartDelete(cartRequest, accessToken) {\n\n\n    const options = {\n        method: \"DELETE\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.cartDelete+cartRequest.movieId, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n\n    }\n\n    return Axios.request(options);\n}\n\nexport async function cartRetrieve(accessToken) {\n\n    const options = {\n        method: \"GET\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.cartRetrieve, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n    }\n\n    return Axios.request(options);\n}\n\nexport async function cartClear(accessToken) {\n\n    const options = {\n        method: \"POST\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.cartClear, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n    }\n\n    return Axios.request(options);\n}\n\nexport async function orderPayment(accessToken) {\n\n    const options = {\n        method: \"GET\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.orderPayment, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n    }\n\n    return Axios.request(options);\n}\n\nexport async function orderComplete(paymentintent, accessToken) {\n    const options = {\n        method: \"POST\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.orderComplete, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n        data: {\n            paymentIntentId : paymentintent\n        }\n\n    }\n\n    return Axios.request(options);\n}\nexport async function orderList(accessToken) {\n\n    const options = {\n        method: \"GET\", // Method type (\"POST\", \"GET\", \"DELETE\", ect)\n        baseURL: Config.billingUrl, // Base URL (localhost:8081 for example)\n        url: Config.billing.orderList, // Path of URL (\"/login\")\n        headers: {\n            Authorization: \"Bearer \" + accessToken\n        },\n    }\n\n    return Axios.request(options);\n}"]},"metadata":{},"sourceType":"module"}